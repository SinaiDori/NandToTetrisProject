// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with increment, load, and reset modes.
 * if      (inc(t))   out(t+1) = out(t) + 1
 * else if (load(t))  out(t+1) = in(t)
 * else if (reset(t)) out(t+1) = 0
 * else               out(t+1) = out(t)
 *
 * To select a mode, assert the relevant control bit,
 * and de-assert the other two bits. 
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];
    
    PARTS:
    
    // Mux16(a=regout, b=regoutzero, sel=reset, out=mux16out1);
    // Mux16(a=mux16out1, b=regoutinc16, sel=inc, out=mux16out2);
    // Mux16(a=mux16out2, b=regout, sel=load, out=outTemp, out=out);
    // Inc16(in=outTemp, out=inc16out);
    // Register(in=inc16out, load=inc, out=regoutinc16);
    // Register(in=in, load=load, out=regout);
    // Register(in=false, load=reset, out=regoutzero);
    
    Mux16(a=regSpecialOut, b=regOutZero, sel=reset, out=mux16Out1);
    Mux16(a=mux16Out1, b=regOut, sel=load, out=mux16Out2);
    Mux16(a=mux16Out2, b=regOutInc16, sel=inc, out=outTemp, out=out);
    Register(in=false, load=reset, out=regOutZero);
    Register(in=in, load=load, out=regOut);
    Inc16(in=outTemp, out=inc16Out);
    Register(in=inc16Out, load=inc, out=regOutInc16);
    Register(in=outTemp, load=true, out=regSpecialOut);
}
